# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    app_bundle.book_repository:
        class: Doctrine\ORM\Entity\Repository
        factory: ['@doctrine.orm.default_entity_manager', getRepository]
        arguments:
          - AppBundle\Entity\Book

    app_bundle.review_repository:
            class: Doctrine\ORM\Entity\Repository
            factory: ['@doctrine.orm.default_entity_manager', getRepository]
            arguments:
              - AppBundle\Entity\Review

    app_bundle.author_repository:
            class: Doctrine\ORM\Entity\Repository
            factory: ['@doctrine.orm.default_entity_manager', getRepository]
            arguments:
              - AppBundle\Entity\Author

    app_bundle.avatar_file_uploader:
      class: AppBundle\Service\AvatarFileUploader
      arguments:
        $targetDir: '%author_avatars_directory%'

    app_bundle.signature_file_uploader:
      class: AppBundle\Service\SignatureFileUploader
      arguments:
        $targetDir: '%author_signatures_directory%'

    app_bundle.cover_file_uploader:
       class: AppBundle\Service\CoverFileUploader
       arguments:
          $targetDir: '%book_covers_directory%'

    AppBundle\Service\BookService:
          class: AppBundle\Service\BookService
          arguments: ['@app_bundle.book_repository', '@doctrine.orm.entity_manager', '@app_bundle.cover_file_uploader']

    AppBundle\Service\ReviewService:
          class: AppBundle\Service\ReviewService
          arguments: ['@app_bundle.review_repository', '@doctrine.orm.entity_manager']

    AppBundle\Service\AuthorService:
              class: AppBundle\Service\AuthorService
              arguments: ['@app_bundle.author_repository', '@doctrine.orm.entity_manager', '@app_bundle.avatar_file_uploader', '@app_bundle.signature_file_uploader']

    AppBundle\EventListener\PageNotFoundExceptionSubscriber:
          class: AppBundle\EventListener\PageNotFoundExceptionSubscriber
          arguments: ['@router']
          tags:
            - { name: kernel.event_subscriber }